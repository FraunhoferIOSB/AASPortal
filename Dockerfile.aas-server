# Dockerfile to build server and client parts
FROM node:alpine3.19 as build
WORKDIR /usr/src/app
COPY . .
# RUN apk add g++ make py3-pip
RUN npm install
RUN node --no-warnings --loader ts-node/esm create-app-info.ts
RUN npm run aas-server:build

FROM node:alpine3.19 AS aas-server
RUN apk upgrade --update-cache --available && apk add openssl && rm -rf /var/cache/apk/*
WORKDIR /usr/src/app
COPY projects/aas-server/package.json package.json
COPY projects/aas-server/src/assets assets/
RUN npm install --omit=dev
COPY --from=build /usr/src/app/projects/aas-server/dist/ /usr/src/app/
COPY --from=build /usr/src/app/projects/aas-core/dist/ /usr/src/app/node_modules/aas-core/dist/
COPY --from=build /usr/src/app/projects/aas-core/package.json /usr/src/app/node_modules/aas-core/package.json
ENV NODE_LOG=./log/debug.log
ENV NODE_SERVER_PORT=1337
ENV USER_STORAGE=mongodb://172.16.160.177:27017/aasportal-users
ENV AAS_INDEX=mysql://172.16.160.177:3306
ENV TEMPLATE_STORAGE: http://172.16.160.177:8080/templates
ENV ENDPOINTS=["\"file:///endpoints/samples?name=Samples\""]
ENV NODE_ENV=production

EXPOSE 1337
CMD ["node", "aas-server.js" ]
